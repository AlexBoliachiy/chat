//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuiClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime datetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string toField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime datetime {
            get {
                return this.datetimeField;
            }
            set {
                if ((this.datetimeField.Equals(value) != true)) {
                    this.datetimeField = value;
                    this.RaisePropertyChanged("datetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string from {
            get {
                return this.fromField;
            }
            set {
                if ((object.ReferenceEquals(this.fromField, value) != true)) {
                    this.fromField = value;
                    this.RaisePropertyChanged("from");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string to {
            get {
                return this.toField;
            }
            set {
                if ((object.ReferenceEquals(this.toField, value) != true)) {
                    this.toField = value;
                    this.RaisePropertyChanged("to");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Actor", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GuiClient.ServiceReference1.User))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GuiClient.ServiceReference1.Admin))]
    public partial class Actor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool SexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string infoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sex {
            get {
                return this.SexField;
            }
            set {
                if ((this.SexField.Equals(value) != true)) {
                    this.SexField = value;
                    this.RaisePropertyChanged("Sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string info {
            get {
                return this.infoField;
            }
            set {
                if ((object.ReferenceEquals(this.infoField, value) != true)) {
                    this.infoField = value;
                    this.RaisePropertyChanged("info");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class User : GuiClient.ServiceReference1.Actor {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Admin", Namespace="http://schemas.datacontract.org/2004/07/WcfService2")]
    [System.SerializableAttribute()]
    public partial class Admin : GuiClient.ServiceReference1.Actor {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAdminField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Microsoft.ServiceModel.Samples", ConfigurationName="ServiceReference1.IMessanger")]
    public interface IMessanger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddFriend", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddFriendResponse")]
        bool AddFriend(string Login, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddFriend", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddFriendResponse")]
        System.Threading.Tasks.Task<bool> AddFriendAsync(string Login, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Ban", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/BanResponse")]
        bool Ban(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Ban", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/BanResponse")]
        System.Threading.Tasks.Task<bool> BanAsync(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Authorization", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AuthorizationResponse")]
        int Authorization(string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Authorization", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AuthorizationResponse")]
        System.Threading.Tasks.Task<int> AuthorizationAsync(string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/RegisterNewUser", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/RegisterNewUserResponse")]
        bool RegisterNewUser(string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/RegisterNewUser", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/RegisterNewUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterNewUserAsync(string Login, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/SendMessage", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/SendMessageResponse")]
        bool SendMessage(int id, GuiClient.ServiceReference1.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/SendMessage", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/SendMessageResponse")]
        System.Threading.Tasks.Task<bool> SendMessageAsync(int id, GuiClient.ServiceReference1.Message msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/GetNewMessage", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/GetNewMessageResponse")]
        GuiClient.ServiceReference1.Message[] GetNewMessage(string login, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/GetNewMessage", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/GetNewMessageResponse")]
        System.Threading.Tasks.Task<GuiClient.ServiceReference1.Message[]> GetNewMessageAsync(string login, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddEmail", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddEmailResponse")]
        bool AddEmail(int id, string login, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddEmail", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddEmailResponse")]
        System.Threading.Tasks.Task<bool> AddEmailAsync(int id, string login, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddInformation", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddInformationResponse")]
        bool AddInformation(int id, string login, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddInformation", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddInformationResponse")]
        System.Threading.Tasks.Task<bool> AddInformationAsync(int id, string login, string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddGender", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddGenderResponse")]
        bool AddGender(int id, string login, bool gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/AddGender", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/AddGenderResponse")]
        System.Threading.Tasks.Task<bool> AddGenderAsync(int id, string login, bool gender);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Search", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/SearchResponse")]
        GuiClient.ServiceReference1.Actor[] Search(int id, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Search", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/SearchResponse")]
        System.Threading.Tasks.Task<GuiClient.ServiceReference1.Actor[]> SearchAsync(int id, string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/getUser", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/getUserResponse")]
        GuiClient.ServiceReference1.User getUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/getUser", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/getUserResponse")]
        System.Threading.Tasks.Task<GuiClient.ServiceReference1.User> getUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/getAdmin", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/getAdminResponse")]
        GuiClient.ServiceReference1.Admin getAdmin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/getAdmin", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/getAdminResponse")]
        System.Threading.Tasks.Task<GuiClient.ServiceReference1.Admin> getAdminAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Disconnect", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/DisconnectResponse")]
        void Disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Microsoft.ServiceModel.Samples/IMessanger/Disconnect", ReplyAction="http://Microsoft.ServiceModel.Samples/IMessanger/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessangerChannel : GuiClient.ServiceReference1.IMessanger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessangerClient : System.ServiceModel.ClientBase<GuiClient.ServiceReference1.IMessanger>, GuiClient.ServiceReference1.IMessanger {
        
        public MessangerClient() {
        }
        
        public MessangerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessangerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessangerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessangerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddFriend(string Login, int id) {
            return base.Channel.AddFriend(Login, id);
        }
        
        public System.Threading.Tasks.Task<bool> AddFriendAsync(string Login, int id) {
            return base.Channel.AddFriendAsync(Login, id);
        }
        
        public bool Ban(string Login) {
            return base.Channel.Ban(Login);
        }
        
        public System.Threading.Tasks.Task<bool> BanAsync(string Login) {
            return base.Channel.BanAsync(Login);
        }
        
        public int Authorization(string Login, string Password) {
            return base.Channel.Authorization(Login, Password);
        }
        
        public System.Threading.Tasks.Task<int> AuthorizationAsync(string Login, string Password) {
            return base.Channel.AuthorizationAsync(Login, Password);
        }
        
        public bool RegisterNewUser(string Login, string Password) {
            return base.Channel.RegisterNewUser(Login, Password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterNewUserAsync(string Login, string Password) {
            return base.Channel.RegisterNewUserAsync(Login, Password);
        }
        
        public bool SendMessage(int id, GuiClient.ServiceReference1.Message msg) {
            return base.Channel.SendMessage(id, msg);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageAsync(int id, GuiClient.ServiceReference1.Message msg) {
            return base.Channel.SendMessageAsync(id, msg);
        }
        
        public GuiClient.ServiceReference1.Message[] GetNewMessage(string login, int id) {
            return base.Channel.GetNewMessage(login, id);
        }
        
        public System.Threading.Tasks.Task<GuiClient.ServiceReference1.Message[]> GetNewMessageAsync(string login, int id) {
            return base.Channel.GetNewMessageAsync(login, id);
        }
        
        public bool AddEmail(int id, string login, string email) {
            return base.Channel.AddEmail(id, login, email);
        }
        
        public System.Threading.Tasks.Task<bool> AddEmailAsync(int id, string login, string email) {
            return base.Channel.AddEmailAsync(id, login, email);
        }
        
        public bool AddInformation(int id, string login, string info) {
            return base.Channel.AddInformation(id, login, info);
        }
        
        public System.Threading.Tasks.Task<bool> AddInformationAsync(int id, string login, string info) {
            return base.Channel.AddInformationAsync(id, login, info);
        }
        
        public bool AddGender(int id, string login, bool gender) {
            return base.Channel.AddGender(id, login, gender);
        }
        
        public System.Threading.Tasks.Task<bool> AddGenderAsync(int id, string login, bool gender) {
            return base.Channel.AddGenderAsync(id, login, gender);
        }
        
        public GuiClient.ServiceReference1.Actor[] Search(int id, string login) {
            return base.Channel.Search(id, login);
        }
        
        public System.Threading.Tasks.Task<GuiClient.ServiceReference1.Actor[]> SearchAsync(int id, string login) {
            return base.Channel.SearchAsync(id, login);
        }
        
        public GuiClient.ServiceReference1.User getUser() {
            return base.Channel.getUser();
        }
        
        public System.Threading.Tasks.Task<GuiClient.ServiceReference1.User> getUserAsync() {
            return base.Channel.getUserAsync();
        }
        
        public GuiClient.ServiceReference1.Admin getAdmin() {
            return base.Channel.getAdmin();
        }
        
        public System.Threading.Tasks.Task<GuiClient.ServiceReference1.Admin> getAdminAsync() {
            return base.Channel.getAdminAsync();
        }
        
        public void Disconnect() {
            base.Channel.Disconnect();
        }
        
        public System.Threading.Tasks.Task DisconnectAsync() {
            return base.Channel.DisconnectAsync();
        }
    }
}
